<!DOCTYPE HTML>
<!-- saved from url=(0053)http://bl.ocks.org/mbostock/raw/248bac3b8e354a9103c4/
original:http://bl.ocks.org/mbostock/248bac3b8e354a9103c4
 -->
<!DOCTYPE html PUBLIC "" ""><HTML><HEAD><META content="IE=11.0000"
http-equiv="X-UA-Compatible">

<META charset="utf-8">
<STYLE>

.background {
  fill: #e7e7e7;
}

.axis path,
.axis line {
  fill: none;
  stroke: #fff;
  shape-rendering: crispEdges;
}

.axis .tick:nth-child(2n) {
  stroke-opacity: 0.5;
}

.axis text {
  font: 10px sans-serif;
}

.line path {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

#ease-type {
  position: absolute;
  top: 100px;
  left: 130px;
}

</STYLE>

<META name="GENERATOR" content="MSHTML 11.00.9600.17496"></HEAD>
<BODY><SELECT id="ease-type">   <OPTION value="linearIn"
  selected="">linearIn</OPTION>   <OPTION value="linearOut">linearOut</OPTION>
  <OPTION value="linearInOut">linearInOut</OPTION>   <OPTION
  value="quadIn">quadIn</OPTION>   <OPTION value="quadOut">quadOut</OPTION>
  <OPTION value="quadInOut">quadInOut</OPTION>   <OPTION
  value="cubicIn">cubicIn</OPTION>   <OPTION value="cubicOut">cubicOut</OPTION>
   <OPTION value="cubicInOut">cubicInOut</OPTION>   <OPTION
  value="polyIn">polyIn</OPTION>   <OPTION value="polyOut">polyOut</OPTION>
  <OPTION value="polyInOut">polyInOut</OPTION>   <OPTION
  value="sinIn">sinIn</OPTION>   <OPTION value="sinOut">sinOut</OPTION>
  <OPTION value="sinInOut">sinInOut</OPTION>   <OPTION
  value="expIn">expIn</OPTION>   <OPTION value="expOut">expOut</OPTION>
  <OPTION value="expInOut">expInOut</OPTION>   <OPTION
  value="circleIn">circleIn</OPTION>   <OPTION
  value="circleOut">circleOut</OPTION>   <OPTION
  value="circleInOut">circleInOut</OPTION>   <OPTION
  value="bounceIn">bounceIn</OPTION>   <OPTION
  value="bounceOut">bounceOut</OPTION>   <OPTION
  value="bounceInOut">bounceInOut</OPTION>   <OPTION
  value="backIn">backIn</OPTION>   <OPTION value="backOut">backOut</OPTION>
  <OPTION value="backInOut">backInOut</OPTION>   <OPTION
  value="elasticIn">elasticIn</OPTION>   <OPTION
  value="elasticOut">elasticOut</OPTION>   <OPTION
  value="elasticInOut">elasticInOut</OPTION> </SELECT>
<SCRIPT src="accelerate_coast_simpler_files/d3.v3.min.js"></SCRIPT>

<SCRIPT>

/* https://github.com/d3/d3-ease Copyright 2015 Michael Bostock, Copyright 2001 Robert Penner. */
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define("d3-ease",["exports"],t):t(n.d3_ease={})}(this,function(n){"use strict";function t(n,t){return function(u){return n(u,t)}}function u(n,t,u){return function(r){return n(r,t,u)}}function r(n,t){return t=C.call(t),t[0]=null,function(u){return t[0]=u,n.apply(null,t)}}function e(n,e,c){switch(arguments.length){case 1:return n;case 2:return t(n,e);case 3:return u(n,e,c);default:return r(n,arguments)}}function c(n){return+n}function i(n){return n*n}function o(n){return n*(2-n)}function a(n){return((n*=2)<=1?n*n:--n*(2-n)+1)/2}function l(n){return n*n*n}function f(n){return--n*n*n+1}function s(n){return((n*=2)<=1?n*n*n:(n-=2)*n*n+2)/2}function h(n,t){return null==t&&(t=3),Math.pow(n,t)}function M(n,t){return null==t&&(t=3),1-Math.pow(1-n,t)}function p(n,t){return null==t&&(t=3),((n*=2)<=1?Math.pow(n,t):2-Math.pow(2-n,t))/2}function I(n){return 1-Math.cos(n*E)}function O(n){return Math.sin(n*E)}function d(n){return(1-Math.cos(D*n))/2}function b(n){return Math.pow(2,10*n-10)}function w(n){return 1-Math.pow(2,-10*n)}function x(n){return((n*=2)<=1?Math.pow(2,10*n-10):2-Math.pow(2,10-10*n))/2}function y(n){return 1-Math.sqrt(1-n*n)}function q(n){return Math.sqrt(1- --n*n)}function m(n){return((n*=2)<=1?1-Math.sqrt(1-n*n):Math.sqrt(1-(n-=2)*n)+1)/2}function k(n){return 1-g(1-n)}function g(n){return F>n?S*n*n:H>n?S*(n-=G)*n+J:L>n?S*(n-=K)*n+N:S*(n-=Q)*n+R}function v(n){return((n*=2)<=1?1-g(1-n):g(n-1)+1)/2}function P(n,t){return t=null==t?1.70158:+t,n*n*((t+1)*n-t)}function j(n,t){return t=null==t?1.70158:+t,--n*n*((t+1)*n+t)+1}function A(n,t){return t=null==t?1.70158:+t,((n*=2)<1?n*n*((t+1)*n-t):(n-=2)*n*((t+1)*n+t)+2)/2}function _(n,t,u){return t=null==t?1:Math.max(1,t),u=(null==u?.3:u)/T,t*Math.pow(2,10*--n)*Math.sin((u*Math.asin(1/t)-n)/u)}function z(n,t,u){return t=null==t?1:Math.max(1,t),u=(null==u?.3:u)/T,1-t*Math.pow(2,-10*n)*Math.sin((+n+u*Math.asin(1/t))/u)}function B(n,t,u){t=null==t?1:Math.max(1,t),u=(null==u?.3:u)/T;var r=u*Math.asin(1/t);return((n=2*n-1)<0?t*Math.pow(2,10*n)*Math.sin((r-n)/u):2-t*Math.pow(2,-10*n)*Math.sin((r+n)/u))/2}var C=Array.prototype.slice,D=Math.PI,E=D/2,F=4/11,G=6/11,H=8/11,J=.75,K=9/11,L=10/11,N=.9375,Q=21/22,R=63/64,S=1/F/F,T=2*Math.PI,U="0.2.0";n.version=U,n.ease=e,n.linear=c,n.linearIn=c,n.linearOut=c,n.linearInOut=c,n.quad=i,n.quadIn=i,n.quadOut=o,n.quadInOut=a,n.cubic=l,n.cubicIn=l,n.cubicOut=f,n.cubicInOut=s,n.poly=h,n.polyIn=h,n.polyOut=M,n.polyInOut=p,n.sin=I,n.sinIn=I,n.sinOut=O,n.sinInOut=d,n.exp=b,n.expIn=b,n.expOut=w,n.expInOut=x,n.circle=y,n.circleIn=y,n.circleOut=q,n.circleInOut=m,n.bounce=k,n.bounceIn=k,n.bounceOut=g,n.bounceInOut=v,n.back=P,n.backIn=P,n.backOut=j,n.backInOut=A,n.elastic=_,n.elasticIn=_,n.elasticOut=z,n.elasticInOut=B});

var margin = {top: 120, right: 120, bottom: 120, left: 120},
    width = 960 - margin.left - margin.right,
    height = 960 - margin.top - margin.bottom;

var tickFormat = d3.format(".1f");

var y = d3.scale.linear()
    .domain([0, 1])
    .range([height, 0]);

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickSize(-width)
    .tickFormat(function(d, i) { return i & 1 ? null : tickFormat(d); })
    .tickPadding(8);

var x = d3.scale.linear()
    .domain([0, 1])
    .range([0, width]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickSize(-height)
    .tickFormat(function(d, i) { return i & 1 ? null : tickFormat(d); })
    .tickPadding(8);

var path = d3.svg.line();

var ease = d3_ease.linearIn;

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("rect")
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height);

svg.append("g")
    .attr("class", "axis axis--x")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis)
  .append("text")
    .attr("class", "axis-title")
    .attr("x", width - 10)
    .attr("y", 8)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .style("font-weight", "bold")
    .text("t = ");

svg.append("g")
    .attr("class", "axis axis--y")
    .call(yAxis)
  .append("text")
    .attr("class", "axis-title")
    .attr("x", -24)
    .attr("dy", ".32em")
    .style("text-anchor", "end")
    .style("font-weight", "bold")
    .text("ease(t) = ");

var line = svg.append("g")
    .attr("class", "line")
  .append("path");

var dot1 = svg.append("circle")
    .attr("r", 5);

var dot2 = svg.append("circle")
    .attr("cx", width + 20)
    .attr("r", 5);

var select = d3.select("#ease-type")
    .on("change", changed)
    .property("value", top.location.hash ? top.location.hash.slice(1) : "linearIn")
    .each(changed);

function changed() {
  ease = d3_ease[this.value] || d3_ease.linearIn;
  line.attr("d", path(d3.range(0, 1, .002).concat(1).map(function(t) {
    return [x(t), y(ease(t))];
  })));
}

d3.timer(function(elapsed) {
  var t = (elapsed % 3000) / 3000;
  dot1.attr("cx", x(t)).attr("cy", y(ease(t)));
  dot2.attr("cy", y(ease(t)));
});

d3.select(self.frameElement).style("height", height + margin.top + margin.bottom + "px");

</SCRIPT>
 </BODY></HTML>
